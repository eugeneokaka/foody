// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  name      String   @unique
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favorite  Post[]   @relation("UserFavorites")
  posts     Post[]   @relation("UserPosts")
  comments  Comment[]
  password  String
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  steps       Json?
  views       Int      @default(0)
  likes       Int      @default(0)
  path       String
  category    String
  summary     String
  user        User     @relation("UserPosts", fields: [userId], references: [id])
  userId      String
  favoritedBy User[]   @relation("UserFavorites")
  comments    Comment[]
  likesnum     Int @default(0)
  userLikes   Json?    // To store additional user-like metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  postId    String
  post      Post      @relation(fields: [postId], references: [id])
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}